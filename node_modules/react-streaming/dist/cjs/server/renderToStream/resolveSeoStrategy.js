"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveSeoStrategy = void 0;
// https://github.com/omrilotan/isbot
// https://github.com/mahovich/isbot-fast
// https://stackoverflow.com/questions/34647657/how-to-detect-web-crawlers-for-seo-using-express/68869738#68869738
const isbot_fast_1 = __importDefault(require("isbot-fast"));
const utils_1 = require("../utils");
function resolveSeoStrategy(options = {}) {
    const seoStrategy = options.seoStrategy || 'conservative';
    if (!options.userAgent) {
        (0, utils_1.assertWarning)(false, 'Streaming disabled. Provide `options.userAgent` to enable streaming. (react-streaming needs the User Agent string in order to be able to disable streaming for bots, e.g. for Google Bot.) Or set `options.disable` to `true` to get rid of this warning.', { onlyOnce: true });
        return { disableStream: true };
    }
    if (!(0, isbot_fast_1.default)(options.userAgent)) {
        return { disableStream: false };
    }
    const isGoogleBot = options.userAgent.toLowerCase().includes('googlebot');
    if (seoStrategy === 'google-speed' && isGoogleBot) {
        return { disableStream: false };
    }
    return { disableStream: true };
}
exports.resolveSeoStrategy = resolveSeoStrategy;
