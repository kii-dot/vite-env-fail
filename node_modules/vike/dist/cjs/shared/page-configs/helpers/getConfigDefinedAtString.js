"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefinedAtString = exports.getConfigDefinedAtString = void 0;
const utils_js_1 = require("../../utils.js");
const picocolors_1 = __importDefault(require("@brillout/picocolors"));
const getExportPath_js_1 = require("../getExportPath.js");
function getConfigDefinedAtString(sentenceBegin, configName, { definedAt }) {
    const definedAtString = getDefinedAtString(definedAt, configName);
    const definedAtStr = definedAtString === 'internally' ? definedAtString : `at ${definedAtString}`;
    let configNameStr = `${configName}${ /*sentenceBegin === 'Hook' ? '()' :*/''}`;
    const configDefinedAt = `${sentenceBegin} ${picocolors_1.default.cyan(configNameStr)} defined ${definedAtStr}`;
    return configDefinedAt;
}
exports.getConfigDefinedAtString = getConfigDefinedAtString;
function getDefinedAtString(definedAt, configName) {
    if ('isComputed' in definedAt) {
        return 'internally';
    }
    let files;
    if ('files' in definedAt) {
        files = definedAt.files;
    }
    else {
        files = [definedAt];
    }
    (0, utils_js_1.assert)(files.length >= 1);
    const definedAtString = files
        .map((source) => {
        const { filePathToShowToUser, fileExportPathToShowToUser } = source;
        let s = filePathToShowToUser;
        const exportPath = (0, getExportPath_js_1.getExportPath)(fileExportPathToShowToUser, configName);
        if (exportPath) {
            s = `${s} > ${picocolors_1.default.cyan(exportPath)}`;
        }
        return s;
    })
        .join(' / ');
    return definedAtString;
}
exports.getDefinedAtString = getDefinedAtString;
